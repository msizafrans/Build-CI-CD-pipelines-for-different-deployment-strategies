name: Frontend Continuous Deployment

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Checking Out the code from Repo
        uses: actions/checkout@v3
  
      - name: Setting up NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 16.16.0
  
      - name: Cache before dependency install
        id: CachingData
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
        
      - name: Installing dependencies
        run: npm ci
  
      - name: Now Running Lint
        run: npm run lint
  
  test:
    name: Test
    runs-on: ubuntu-latest
    defaults:
        run:
          working-directory: frontend
    steps:
      - name: Checking Out the code from Repo
        uses: actions/checkout@v3
      
      - name: Setting up NodeJS
        uses: actions/setup-node@v3
        with:
            node-version: 16.16.0
      
      - name: Cache before dependency install
        id: CachingData
        uses: actions/cache@v3
        with:
            path: ~/.npm
            key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
          
      - name: Installing dependencies
        run: npm ci
      
      - name: Now Running Tests
        run: npm run test
      
  build:
    name: Build and Deploy
    runs-on: ubuntu-latest
    needs: [lint,test]
    defaults:
        run:
          working-directory: frontend
    steps:
      - name: Checking Out the code from Repo
        uses: actions/checkout@v3
  
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4 
        with:
          role-to-assume: arn:aws:iam::952272982413:role/github-action-role
          aws-region: us-east-1
          
  
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
  
      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: frontend
          IMAGE_TAG: ${{ github.sha }}
          REACT_APP_MOVIE_API_URL: ${{ vars.REACT_APP_MOVIE_API_URL }}
        run: |
          docker build --build-arg=REACT_APP_MOVIE_API_URL="http://$REACT_APP_MOVIE_API_URL" -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
      
      - name: Setup Authentication against EKS Cluster 
        working-directory: frontend/k8s
        run: |
          aws eks update-kubeconfig --name cluster --region us-east-1
          kubectl get services -o wide
  
      - name: Deploy the image to the cluster
        run: |
          cd k8s
          kustomize edit set image frontend=952272982413.dkr.ecr.us-east-1.amazonaws.com/frontend:latest
          kustomize build | kubectl apply -f -
      
